// Code generated by MockGen. DO NOT EDIT.
// Source: iBuilder.go

// Package mock; is a generated GoMock package.
package mock

import (
	builder "patterns/builder"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCakeBuilder is a mock of CakeBuilder interface.
type MockCakeBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockCakeBuilderMockRecorder
}

// MockCakeBuilderMockRecorder is the mock recorder for MockCakeBuilder.
type MockCakeBuilderMockRecorder struct {
	mock *MockCakeBuilder
}

// NewMockCakeBuilder creates a new mock instance.
func NewMockCakeBuilder(ctrl *gomock.Controller) *MockCakeBuilder {
	mock := &MockCakeBuilder{ctrl: ctrl}
	mock.recorder = &MockCakeBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCakeBuilder) EXPECT() *MockCakeBuilderMockRecorder {
	return m.recorder
}

// AddMixtureToMold mocks base method.
func (m *MockCakeBuilder) AddMixtureToMold() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMixtureToMold")
	ret0, _ := ret[0].(error)
	return ret0
}

// AddMixtureToMold indicates an expected call of AddMixtureToMold.
func (mr *MockCakeBuilderMockRecorder) AddMixtureToMold() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMixtureToMold", reflect.TypeOf((*MockCakeBuilder)(nil).AddMixtureToMold))
}

// CookInOven mocks base method.
func (m *MockCakeBuilder) CookInOven() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CookInOven")
}

// CookInOven indicates an expected call of CookInOven.
func (mr *MockCakeBuilderMockRecorder) CookInOven() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CookInOven", reflect.TypeOf((*MockCakeBuilder)(nil).CookInOven))
}

// GetCake mocks base method.
func (m *MockCakeBuilder) GetCake() *builder.Cake {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCake")
	ret0, _ := ret[0].(*builder.Cake)
	return ret0
}

// GetCake indicates an expected call of GetCake.
func (mr *MockCakeBuilderMockRecorder) GetCake() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCake", reflect.TypeOf((*MockCakeBuilder)(nil).GetCake))
}

// MixIngredients mocks base method.
func (m *MockCakeBuilder) MixIngredients() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MixIngredients")
}

// MixIngredients indicates an expected call of MixIngredients.
func (mr *MockCakeBuilderMockRecorder) MixIngredients() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MixIngredients", reflect.TypeOf((*MockCakeBuilder)(nil).MixIngredients))
}

// ShakeMixture mocks base method.
func (m *MockCakeBuilder) ShakeMixture() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ShakeMixture")
}

// ShakeMixture indicates an expected call of ShakeMixture.
func (mr *MockCakeBuilderMockRecorder) ShakeMixture() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShakeMixture", reflect.TypeOf((*MockCakeBuilder)(nil).ShakeMixture))
}
